import os
import cv2
import numpy as np
from flask import Flask, render_template, request, jsonify
from tensorflow.keras.models import load_model

app = Flask(__name__)
model = load_model('diabetic_retinopathy_model.h5')

def preprocess_image(image):
    image = cv2.resize(image, (224, 224))
    image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
    image = image / 255.0
    return np.expand_dims(image, axis=0)

@app.route('/')
def home():
    return render_template('index.html')

@app.route('/predict', methods=['POST'])
def predict():
    if 'image' not in request.files:
        return jsonify({'error': 'No image uploaded'}), 400

    file = request.files['image']

    if file.filename == '':
        return jsonify({'error': 'Empty filename'}), 400

    allowed_extensions = {'png', 'jpg', 'jpeg'}
    if not (file.filename.split('.')[-1].lower() in allowed_extensions):
        return jsonify({'error': 'Invalid file format'}), 400

    try:
        img = cv2.imdecode(np.frombuffer(file.read(), np.uint8), cv2.IMREAD_COLOR)
        processed_img = preprocess_image(img)
    except Exception as e:
        return jsonify({'error': f'Error processing image: {str(e)}'}), 500

    prediction = model.predict(processed_img)
    result = 'Diabetic Retinopathy Detected' if prediction > 0.5 else 'No Diabetic Retinopathy Detected'
    
    return jsonify({'prediction': result})

if __name__ == '__main__':
    app.run(debug=False, host='0.0.0.0', port=int(os.environ.get('PORT', 5000)))
